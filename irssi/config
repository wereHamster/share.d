servers = (
  {
    address    = "chat.freenode.net";
    chatnet    = "freenode";
    port       = "7000";
    use_ssl    = "yes";
    ssl_verify = "yes";
    ssl_capath = "/etc/ssl/certs";
  }
);

chatnets = { freenode = { type = "IRC"; }; };

channels = (
  { name = "#yukon";         chatnet = "freenode";  autojoin = "yes";  },
  { name = "#git";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#github";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#transmission";  chatnet = "freenode";  autojoin = "yes";  },
  { name = "#opensolaris";   chatnet = "freenode";  autojoin = "yes";  },
  { name = "#xorg-devel";    chatnet = "freenode";  autojoin = "yes";  },
  { name = "#mongodb";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#cafaree";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#svn";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#ner";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#notmuch";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#wowuidev";      chatnet = "freenode";  autojoin = "yes";  },
  { name = "#mongomapper";   chatnet = "freenode";  autojoin = "yes";  },
  { name = "#machomebrew";   chatnet = "freenode";  autojoin = "yes";  },
  { name = "#RubyOnRails";   chatnet = "freenode";  autojoin = "yes";  },
  { name = "#mmorpg-dev";    chatnet = "freenode";  autojoin = "yes";  },
  { name = "#Node.js";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#git-devel";     chatnet = "freenode";  autojoin = "yes";  },
  { name = "#bitcoin-dev";   chatnet = "freenode";  autojoin = "yes";  },
  { name = "#btrfs";         chatnet = "freenode";  autojoin = "yes";  },
  { name = "#gitolite";      chatnet = "freenode";  autojoin = "yes";  },
  { name = "#revctrl";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#coffeescript";  chatnet = "freenode";  autojoin = "yes";  },
  { name = "#bash";          chatnet = "freenode";  autojoin = "yes";  },
  { name = "#nginx";         chatnet = "freenode";  autojoin = "yes";  },
  { name = "#curseforge";    chatnet = "freenode";  autojoin = "yes";  },
  { name = "#wowace";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#rvm";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#ruby";          chatnet = "freenode";  autojoin = "yes";  },
  { name = "#redis";         chatnet = "freenode";  autojoin = "yes";  },
  { name = "#kod";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#postgresql";    chatnet = "freenode";  autojoin = "yes";  },
  { name = "#jekyll";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#jquery";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#sammy";         chatnet = "freenode";  autojoin = "yes";  },
  { name = "#compass";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#iterm2";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#css";           chatnet = "freenode";  autojoin = "yes";  },
  { name = "#puppet";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#joyent";        chatnet = "freenode";  autojoin = "yes";  },
  { name = "#nouveau";       chatnet = "freenode";  autojoin = "yes";  },
  { name = "#gdb";           chatnet = "freenode";  autojoin = "yes";  }
);

aliases = {
  J                = "join";
  WJOIN            = "join -window";
  WQUERY           = "query -window";
  LEAVE            = "part";
  BYE              = "quit";
  EXIT             = "quit";
  SIGNOFF          = "quit";
  DESCRIBE         = "action";
  DATE             = "time";
  HOST             = "userhost";
  LAST             = "lastlog";
  SAY              = "msg *";
  WI               = "whois";
  WII              = "whois $0 $0";
  WW               = "whowas";
  W                = "who";
  N                = "names";
  M                = "msg";
  T                = "topic";
  C                = "clear";
  CL               = "clear";
  K                = "kick";
  KB               = "kickban";
  KN               = "knockout";
  BANS             = "ban";
  B                = "ban";
  MUB              = "unban *";
  UB               = "unban";
  IG               = "ignore";
  UNIG             = "unignore";
  SB               = "scrollback";
  UMODE            = "mode $N";
  WC               = "window close";
  WN               = "window new hide";
  SV               = "say Irssi $J ($V) - http://irssi.org/";
  GOTO             = "sb goto";
  CHAT             = "dcc chat";
  RUN              = "SCRIPT LOAD";
  UPTIME           = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC             = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*                                                                                                     = \"$$1}'\\; else echo bc was not found\\; fi";
  SBAR             = "STATUSBAR";
  INVITELIST       = "mode $C +I";
  Q                = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST       = "mode $C +e";
  ATAG             = "WINDOW SERVER";
  quit             = "echo dont do this at home";
  ADDALLCHANNELS   = "script exec foreach my \\$channel (Irssi::channels()) { Irssi::command(\"channel add -auto \\$channel->{name} \\$channel->{server}->{tag} \\$channel->{key}\")\\;}";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Tomas Carnecky";
    user_name = "tomc";
    nick = "wereHamster";
    log_create_mode = "644";
    timestamp_format = "%H:%M:%S";
  };
  "fe-common/core" = {
    term_charset = "UTF-8";
    autolog = "yes";
    autolog_path = "~/.irssi/logs/${tag}/${0}/%Y/%m/${0}-%Y-%m-%d.log";
    autolog_level = "ALL -CRAP -CLIENTCRAP -CTCPS -MSGS";
    theme = "default";
  };
  "fe-text" = { actlist_sort = "refnum"; };
};

logs = { };
ignores = ( { level = "JOINS PARTS QUITS NICKS"; } );

windows = {
  1  = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2  = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "iff";            tag = "freenode";  });  };
  3  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#yukon";         tag = "freenode";  });  };
  4  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#git";           tag = "freenode";  });  };
  5  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#github";        tag = "freenode";  });  };
  6  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#transmission";  tag = "freenode";  });  };
  7  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#opensolaris";   tag = "freenode";  });  };
  8  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#wowuidev";      tag = "freenode";  });  };
  9  = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#xorg-devel";    tag = "freenode";  });  };
  10 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#ner";           tag = "freenode";  });  };
  11 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#mongodb";       tag = "freenode";  });  };
  12 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#cafaree";       tag = "freenode";  });  };
  13 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#svn";           tag = "freenode";  });  };
  14 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#notmuch";       tag = "freenode";  });  };
  15 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#mongomapper";   tag = "freenode";  });  };
  16 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#machomebrew";   tag = "freenode";  });  };
  17 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#RubyOnRails";   tag = "freenode";  });  };
  18 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#mmorpg-dev";    tag = "freenode";  });  };
  19 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#Node.js";       tag = "freenode";  });  };
  20 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#git-devel";     tag = "freenode";  });  };
  21 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#bitcoin-dev";   tag = "freenode";  });  };
  22 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#btrfs";         tag = "freenode";  });  };
  23 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#gitolite";      tag = "freenode";  });  };
  24 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#revctrl";       tag = "freenode";  });  };
  25 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#coffeescript";  tag = "freenode";  });  };
  26 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#bash";          tag = "freenode";  });  };
  27 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#nginx";         tag = "freenode";  });  };
  28 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "Lacrocivious";   tag = "freenode";  });  };
  29 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#curseforge";    tag = "freenode";  });  };
  30 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#wowace";        tag = "freenode";  });  };
  31 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "avar";           tag = "freenode";  });  };
  32 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "jordan";         tag = "freenode";  });  };
  33 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#rvm";           tag = "freenode";  });  };
  34 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#ruby";          tag = "freenode";  });  };
  35 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#redis";         tag = "freenode";  });  };
  36 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#kod";           tag = "freenode";  });  };
  37 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "fieldy";         tag = "freenode";  });  };
  38 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#postgresql";    tag = "freenode";  });  };
  39 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "chanserv";       tag = "freenode";  });  };
  40 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#jekyll";        tag = "freenode";  });  };
  41 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#jquery";        tag = "freenode";  });  };
  42 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#sammy";         tag = "freenode";  });  };
  43 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#compass";       tag = "freenode";  });  };
  44 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#iterm2";        tag = "freenode";  });  };
  45 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#css";           tag = "freenode";  });  };
  46 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#puppet";        tag = "freenode";  });  };
  47 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "ckknight";       tag = "freenode";  });  };
  48 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#joyent";        tag = "freenode";  });  };
  49 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#nouveau";       tag = "freenode";  });  };
  50 = { items = ( { type = "CHANNEL";  chat_type = "IRC";  name = "#gdb";           tag = "freenode";  });  };
  51 = { items = ( { type = "QUERY";    chat_type = "IRC";  name = "rindolf";        tag = "freenode";  });  };
};

mainwindows = { 4 = { first_line = "1"; lines = "53"; }; };
