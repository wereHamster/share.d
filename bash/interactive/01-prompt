
__bash_ps1 () {
    local ret=$? s="\[\e[37m\]"
    if [ $ret -ne 0 ]; then
        s="\[\e[31m\]"
    fi

    printf "\n%s┌─<[\[\033[34m\]\T%s]-[\[\033[34m\]\h%s]-[" "$s" "$s" "$s"
    #printf "\n%s⎛─<(\[\e[34m\]\h%s)-(" "$s" "$s"
    
    if [ -d ".svn" ] ; then
        printf "\[\033[34m\]\W%s]" "$s"
        
        local r="$(svnversion)"
        if svn status | grep -q -v '^?' ; then
            printf "\[\033[31m\]"
        else
            printf "\[\033[32m\]"
        fi
        
        printf " r$r$status"
    elif d=$(git rev-parse --git-dir 2>/dev/null ) ; then
        local color="\[\033[32m\]" b= r= a=
        if [[ -n "${d}" ]] ; then
            if [[ -d "${d}/../.dotest" ]] ; then
                if [[ -f "${d}/../.dotest/rebase" ]] ; then
                    r="rebase"
                elif [[ -f "${d}/../.dotest/applying" ]] ; then
                    r="am"
                else
                    r="???"
                fi
                b=$(git symbolic-ref HEAD 2>/dev/null )
            elif [[ -f "${d}/.dotest-merge/interactive" ]] ; then
                r="rebase-i"
                b=$(<${d}/.dotest-merge/head-name)
            elif [[ -d "${d}/../.dotest-merge" ]] ; then
                r="rebase-m"
                b=$(<${d}/.dotest-merge/head-name)
            elif [[ -f "${d}/MERGE_HEAD" ]] ; then
                r="merge"
                b=$(git symbolic-ref HEAD 2>/dev/null )
            elif [[ -f "${d}/BISECT_LOG" ]] ; then
                r="bisect"
                b=$(git symbolic-ref HEAD 2>/dev/null )"???"
            else
                r=""
                b=$(git symbolic-ref HEAD 2>/dev/null )
            fi

            num="$(git update-index --ignore-submodules --refresh | wc -l)"
            if [ "$num" -gt 0 ] ; then
                a="$(echo $num)"
            fi

            diff=$(git diff-index --cached --name-status -r --ignore-submodules HEAD --)
            case "$diff" in
                ?*) color="\[\033[33m\]" ;;
            esac

            if [ -n "$(git ls-files --exclude-standard --others 2> /dev/null)" ] ; then
                a="${a}+"
            fi

            b=${b#refs/heads/}
            b=${b// }
            
            if [[ "$d" == ".git" || "$d" == "." ]]; then
                d="$PWD"
            fi
            d="${d%.git}"
            
            printf "\[\033[34m\]%s:%s%s]" "$(basename "$d")" "${PWD##${d%.git}}" "$s"
            printf " %s(%s) \[\033[31m\]%s" "$color" "$b" "$a"
        fi
    else
        printf "\[\033[34m\]\w%s]" "$s"
    fi

    # second line
    printf "\n%s└─╼\[\e[0m\] " "$s"
    #printf "\n%s⎜\[\e[0m\]" "$s"
}

__bash_prompt_command () {
    PS1="$(__bash_ps1)"
}
PROMPT_COMMAND=__bash_prompt_command
